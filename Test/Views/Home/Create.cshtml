@model Test.Models.Main


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <script src="~/scripts/jquery-1.10.2.js"></script>
    <script src="~/scripts/jquery-1.10.2.min.js"></script>
    <script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
</head>

<body>
    <form>

        <div class="form-horizontal">
            <h4>Main</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.Demos.P_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.P_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.P_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.Fname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.Fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Mname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.Mname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.Mname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.Lname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.Lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.Age, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Female
                    @Html.RadioButtonFor(model => model.Demos.Sex, "f")
                    &nbsp;  &nbsp;  &nbsp;
                    male
                    @Html.RadioButtonFor(model => model.Demos.Sex, "m")
                    &nbsp;  &nbsp;  &nbsp;
                    Others
                    @Html.RadioButtonFor(model => model.Demos.Sex, "o")

                    @*@Html.ValidationMessageFor(model => model.Demos.Sex, "", new { @class = "text-danger" })*@
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Education_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Demos.Education_id, ViewBag.educalist as SelectList, "Select Education ", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Demos.Education_id, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Mariatal_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Demos.Mariatal_id, ViewBag.maritilist as SelectList, "Select Marital Status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Demos.Mariatal_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Religion_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Demos.Religion_id, ViewBag.religlist as SelectList, "Select Religion", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Demos.Religion_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Occupation_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Demos.Occupation_id, ViewBag.occulist as SelectList, "Select Occupation", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Demos.Occupation_id, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Demos.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Demos.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Demos.Pincode, "", new { @class = "text-danger" })
                </div>
            </div>





            


                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Red_patch_mouth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Red_patch_mouth)
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.White_patch_mouth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.White_patch_mouth)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Swelling_mouth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Swelling_mouth)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Ulcer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Ulcer)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Leukoplakia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Leukoplakia)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Erythroplakia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Erythroplakia)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Extract_socket, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Extract_socket)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Diff_chewing, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Diff_chewing)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Diff_swallowing, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Diff_swallowing)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Diff_speaking, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Diff_speaking)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Diff_moving_tongue, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Diff_moving_tongue)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Diff_spicy_food, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Diff_spicy_food)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Change_voice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Change_voice)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Breast_Lump, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Breast_Lump)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Nipple_discharge, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Nipple_discharge)
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Foul_smelling, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Foul_smelling)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Post_coidal_bleeding, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Post_coidal_bleeding)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Spotting, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Spotting)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Abnormal_bleeding, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Abnormal_bleeding)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complaints.Others, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(m => m.Complaints.Others)
                    </div>
                </div>


                <div class="form-group" id="label">
                    @Html.LabelFor(model => model.Complaints.Others_specify, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">



                        @Html.EditorFor(model => model.Complaints.Others_specify, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Complaints.Others_specify, "", new { @class = "text-danger" })
                    </div>
                </div>


           









           

        
            <input type="button" value="Create" class="btn btn-default" onclick="BtnClick()" />
        </div>
    </form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>


<script>

    function BtnClick() {
        var id = $("#Demos_P_id").val();
        var fname = $("#Demos_Fname").val();
        var mname = $("#Demos_Mname").val();
        var lname = $("#Demos_Lname").val();
        var sex = $("#Demos_Sex").attr("checked");
        var educationid = $("#Demos_Education_id").val();
        var mariatalid = $("#Demos_Mariatal_id").val();
        var religionid = $("#Demos_Religion_id").val();
        var occupationid = $("#Demos_Occupation_id").val();
        var address = $("#Demos_Address").val();
        var pincode = $("#Demos_Pincode").val();

        var redpatchmouth = $("#Complaints_Red_patch_mouth").is(':checked');
        var whitepatchmouth = $("#Complaints_White_patch_mouth").is(':checked');
        var swelling_mouth = $("#Complaints_Swelling_mouth").is(':checked');
        var ulcer = $("#Complaints_Ulcer").is(':checked');
        var leukoplakia = $("#Complaints_Leukoplakia").is(':checked');
        var erythroplakia = $("#Complaints_Erythroplakia").is(':checked');;
        var extract_socket = $("#Complaints_Extract_socket").is(':checked');
        var diff_chewing = $("#Complaints_Diff_chewing").is(':checked');
        var diff_swallowing = $("#Complaints_Diff_swallowing").is(':checked');
        var diff_speaking = $("#Complaints_Diff_speaking").is(':checked');
        var diff_moving_tongue = $("#Complaints_Diff_moving_tongue").is(':checked');
        var diff_spicy_food = $("#Complaints_Diff_spicy_food").is(':checked');
        var change_voice = $("#Complaints_Change_voice").is(':checked');
        var breast_Lump = $("#Complaints_Breast_Lump").is(':checked');
        var nipple_discharge = $("#Complaints_Nipple_discharge").is(':checked');
        var foul_smelling = $("#Complaints_Foul_smelling").is(':checked');
        var post_coidal_bleeding = $("#Complaints_Post_coidal_bleeding").is(':checked');
        var spotting = $("#Complaints_Spotting").is(':checked');
        var abnormal_bleeding = $("#Complaints_Abnormal_bleeding").is(':checked');
        var others = $("#Complaints_Others").is(':checked');
        var others_specify = $("#Complaints_Others_specify").is(':checked');

        var obj = {

            Demos:
                {

                    P_id: id,
                    Fname: fname,
                    Mname: mname,
                    Lname: lname,
                    Sex: sex,
                    Education_id: educationid,
                    Mariatal_id: mariatalid,
                    Religion_id: religionid,
                    Occupation_id: occupationid,
                    Address: address,
                    Pincode: pincode
                },
            Complaints:
                {

                    Red_patch_mouth: redpatchmouth,
                    White_patch_mouth: whitepatchmouth,
                    Swelling_mouth: swelling_mouth,
                    Ulcer: ulcer,
                    Leukoplakia: leukoplakia,
                    Erythroplakia: erythroplakia,
                    Extract_socket: extract_socket,
                    Diff_chewing: diff_chewing,
                    Diff_swallowing: diff_swallowing,
                    Diff_speaking: diff_speaking,
                    Diff_moving_tongue: diff_moving_tongue,
                    Diff_spicy_food: diff_spicy_food,
                    Change_voice: change_voice,
                    Breast_Lump: breast_Lump,
                    Nipple_discharge: nipple_discharge,
                    Foul_smelling: foul_smelling,
                    Post_coidal_bleeding: post_coidal_bleeding,
                    Spotting: spotting,
                    Abnormal_bleeding: abnormal_bleeding,
                    Others: others,
                    Others_specify: others_specify
                }



        }
        SubmitForm(obj);
    }


    function SubmitForm(obj) {
        $.ajax({
            url: "/Home/test1",
            method: "POST",
            data: obj,
            success: function (data) {
                alert(data);
            },
            error: function (err) {
                console.log(err);
            }
        })
    }
</script>
